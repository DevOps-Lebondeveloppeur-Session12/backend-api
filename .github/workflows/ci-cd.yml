
# ✅ Name of the Workflow
name: Pipeline CI/CD Backend-api

# ✅ Trigger this workflow on push to main branch
on:
  push: 
    branches:
      - main


# ✅ Global Environment Variables.
env:
  BUILD_NUMBER: ${{ github.run_number }}  # Unique build number for the pipeline run
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/backend-api:${{ github.run_number }}


jobs:

  # ✅ Run Unit Tests
  unit-test-job:
    runs-on: ubuntu-latest
    steps:
     
      - name: Clone Source Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  sonarqube-code-quality-scan-job:
    runs-on: ubuntu-latest
    needs: [unit-test-job]
    steps:
      - name: Clone Source Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

   #  Vulnerability Scanning (Snyk)
  snyk-code-security-scan-job:
    runs-on: ubuntu-latest
    needs: [unit-test-job]
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependency Scanning Tool (Snyk)
        run: npm install -g snyk

      - name: Snyk Authentication
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Vulnerability Scan
        run: snyk monitor --all-projects --org=assidiwassim

  # Docker Image Scanning (Trivy)
  trivy-image-security-scan-job:
    runs-on: ubuntu-latest
    needs: [unit-test-job]
    steps:      
      
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl

      - name: Download and install Trivy
        run: |
          curl -sSL https://github.com/aquasecurity/trivy/releases/download/v0.29.0/trivy_0.29.0_Linux-64bit.tar.gz -o trivy.tar.gz
          tar xzvf trivy.tar.gz
          sudo mv trivy /usr/local/bin/
          trivy --version

      - name: Run Trivy files vulnerability scan
        run: |
          trivy fs .

      - name: Run Trivy Docker image vulnerability scan
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .
          trivy image ${{ env.IMAGE_NAME }}
        

  # ✅ Build and Push Docker Image
  build-and-push-job:
    runs-on: ubuntu-latest
    needs: [trivy-image-security-scan-job, snyk-code-security-scan-job, sonarqube-code-quality-scan-job]
    steps:

      - name: Clone Source Code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image 
        run: docker push ${{ env.IMAGE_NAME }}


  # ✅ Deploy to VPS
  deploy-job:
    runs-on: ubuntu-latest
    needs: build-and-push-job  
   
    steps:
      
      - name: Connect to the VPS using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
     
          script: |

            # Pull the latest Docker image
            sudo docker pull ${{ env.IMAGE_NAME }}

            # Remove the old container if it exists
            sudo docker rm -f backend-api 

            # Run the new container with environment variables
            sudo docker run -d \
              --name backend-api \
              --network backend-api-net \
              -p 3001:3001 \
              -e MONGO_URI=${{ secrets.MONGO_URI }} \
              --restart=always \
              ${{ env.IMAGE_NAME }}
